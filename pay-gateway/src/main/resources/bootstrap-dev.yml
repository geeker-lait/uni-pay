suixingpay:
  config:
    enabled: false
    uris:
      - http://192.168.1.199:8091
    username: admin
    password: 123456
eureka:
  instance:
    #hostname: localhost
    #lease-renewal-interval-in-seconds: 30 # 设置心跳的时间间隔（默认是30秒）
    #lease-expiration-duration-in-seconds: 90 # 如果现在超过了5秒的间隔（默认是90秒）
    #instance-id: ${spring.application.name}:${server.port}  # 在信息列表时显示主机名称
    prefer-ip-address: true # 访问的路径变为IP地址
  client: # 客户端进行Eureka注册的配置
    registerWithEureka: true
    fetch-registry: true
    registryFetchIntervalSeconds: 30
    eureka-server-connect-timeout-seconds: 3600
    serviceUrl:
      defaultZone: http://192.168.1.199:17000/eureka
#ribbon:
#
#  # 同一实例最大重试次数，不包括首次调用。默认值为0
#  MaxAutoRetries: 0
#  # 同一个微服务其他实例的最大重试次数，不包括第一次调用的实例。默认值为1
#  MaxAutoRetriesNextServer: 0
#  # 是否所有操作（GET、POST等）都允许重试。默认值为false
#  OkToRetryOnAllOperations: false
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
  #NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
  eureka:
    enabled: true
  eager-load:
    enabled: true
feign:
  httpclient:
    enabled: true

spring:
  redis:
    host: 192.168.1.199
    #    host: 127.0.0.1
    port: 6379
    password:
    timeout: 300
    lettuce:
      pool:
        max-active: 30
        max-idle: 10
        max-wait: 10000
  datasource:
    username: root
    password: zfc1cfkyaghhvzrlcg
    url: jdbc:mysql://192.168.1.199:3306/unichain_payment_center?useUnicode=true&characterEncoding=UTF-8
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQLDialect

logging:
  level:
    org.springframework.web: error
    org.hibernate.SQL: debug
    org.hibernate.engine.QueryParameters: debug
    org.hibernate.engine.query.HQLQueryPlan: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace


  #   cloud:
  #      config:
  #          uri: http://localhost:8087/test   #Config server的uri
  #       profile: dev                       #指定的环境
  #       label: init


